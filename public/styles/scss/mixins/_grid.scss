/// Grid system
//
// Generate semantic grid columns with these mixins.

<<<<<<< HEAD
<<<<<<< HEAD
@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
=======
=======
>>>>>>> b695cb8... Updating EJS Template
@mixin make-container() {
  width: 100%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
<<<<<<< HEAD
>>>>>>> b581025... Updating EJS Template
=======
<<<<<<< HEAD
>>>>>>> b581025fadbdd1c5532877325f463d1b99650a7a
=======
>>>>>>> b695cb8... Updating EJS Template
>>>>>>> 060937b... Rebase
  margin-right: auto;
  margin-left: auto;
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

<<<<<<< HEAD
<<<<<<< HEAD
@mixin make-row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
=======
=======
>>>>>>> b695cb8... Updating EJS Template
@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

@mixin make-col-ready() {
<<<<<<< HEAD
>>>>>>> b581025... Updating EJS Template
=======
<<<<<<< HEAD
>>>>>>> b581025fadbdd1c5532877325f463d1b99650a7a
=======
>>>>>>> b695cb8... Updating EJS Template
>>>>>>> 060937b... Rebase
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
<<<<<<< HEAD
<<<<<<< HEAD
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
=======
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
<<<<<<< HEAD
>>>>>>> b581025... Updating EJS Template
=======
>>>>>>> b581025fadbdd1c5532877325f463d1b99650a7a
=======
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
>>>>>>> b695cb8... Updating EJS Template
>>>>>>> 060937b... Rebase
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}
